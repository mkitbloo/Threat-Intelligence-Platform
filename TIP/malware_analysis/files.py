# this module contains functions for file operations
# it receives files from the front end and parses them for analysis

from scapy.layers.inet import IP, TCP
from scapy.layers.l2 import LLC
from scapy.layers.l2 import Ether
from scapy.utils import rdpcap
from django.conf import settings
from django.conf.urls.static import static


class Files:
    def __init__(self, file):
        self.file = file
    
    def parse_file(self):
        if str(self.file).endswith('.pcap'):
            packets = rdpcap(self.file)

            interesting_packets = packets
            # for i, packet in enumerate(packets):
            #     if not packet.haslayer(Ether):
            #         continue

            #     if packet[Ether].type != 0x0800:
            #         continue
                
            #     if not packet.haslayer(IP):
            #         continue

            #     if packet[IP].proto != 6:
            #         continue

            #     if not packet.haslayer(TCP):
            #         continue

            #     if not packet.haslayer(LLC):
            #         continue
                
            #     interesting_packets.append(packet)

            return interesting_packets

        elif str(self.file).endswith('log'):
            pass

        elif str(self.file).endswith('exe'):
            pass
